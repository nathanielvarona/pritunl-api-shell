#!/usr/bin/env bash

# Pritunl API shell wrapper for secure and simplified command-line requests
# Usage: <this-script> <method> <path> [payload]

# Enable error handling: exit on error, unset variables, and pipefail
set -euo pipefail

# Check if the required arguments are provided
if [ $# -eq 0 ]; then
  # Display usage examples and exit
  echo "Usage: ${0} <method> <path> [payload]"
  echo ""
  echo "Examples:"
  echo "  ${0} GET /entity-uri"
  echo "  ${0} POST /entity-uri '{\"name\":\"New Entity\"}'"
  echo "  ${0} PUT /entity-uri '{\"name\":\"Update Entity\"}'"
  echo "  ${0} DELETE /entity-uri"
  exit 1
fi

# Load API credentials and base URL from environment variables
base_url=${PRITUNL_BASE_URL:-}
api_token=${PRITUNL_API_TOKEN:-}
api_secret=${PRITUNL_API_SECRET:-}

# Generate authentication timestamp and nonce
auth_timestamp=$(date +%s)
auth_nonce=$(uuidgen | tr -d -)

# Construct the authentication string and signature
auth_string="$api_token&$auth_timestamp&$auth_nonce&$(echo "$1" | tr 'a-z' 'A-Z')&$2"
hmacv=$(echo -n "$auth_string" | openssl dgst -sha256 -hmac "$api_secret" -binary)
auth_signature=$(echo -n "$hmacv" | base64 -w 0)

# Set the API request headers
headers=(
  -H "Auth-Token: $api_token"
  -H "Auth-Timestamp: $auth_timestamp"
  -H "Auth-Nonce: $auth_nonce"
  -H "Auth-Signature: $auth_signature"
  -H "Content-Type: application/json"
)

# Make the API request using curl
curl_output=$(curl -sSL -X "$1" "${headers[@]}" "${base_url}${2}" -d "${3:-}")

# Pretty-print the output using jq if available
if command -v jq &> /dev/null; then
  # Use jq to format the output
  echo "$curl_output" | jq -C
else
  # Output the raw response
  echo "$curl_output"
fi
